<div class="task" style="transition: opacity @(visible ? 0 : 250)ms; opacity: @(visible ? 1 : 0); ">
    <div class="task__name">@taskInstance.managedTask.name</div>
    <div class="task__progress">
        <div class="task__progress-value fade"
             style="width: @((@taskInstance.progress * 100).ToInvariantString())%; ">
        </div>
    </div>
    <div class="task__info">@taskInstance.info</div>
</div>

@implements IDisposable

@code {

    [Parameter] public TaskInstance taskInstance { get; set; }
    [Parameter] public bool autoRender { get; set; } = true;

    bool visible => taskInstance.endTimestampAge.TotalMilliseconds < 2750;

    bool disposed;

    public void Dispose()
    {
        disposed = true;
    }

    protected override void OnInitialized()
    {
        if (!autoRender)
            return;

        Task.Run(async () =>
        {
            while (!disposed)
            {
                await this.RenderAsync();
                await Utils.WaitShortAsync();
            }
        });
    }
}