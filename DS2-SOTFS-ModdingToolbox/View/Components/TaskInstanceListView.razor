<div class="tasks">
    @foreach (var taskInstance in taskInstances)
    {
        <TaskInstanceView taskInstance="taskInstance" autoRender="false" />
    }
</div>

@implements IDisposable

@code {

    readonly List<TaskInstance> taskInstances = new();

    bool disposed;

    public void Dispose()
    {
        disposed = true;
    }

    protected override void OnInitialized()
    {
        Task.Run(async () =>
        {
            while (!disposed)
            {
                var taskInstances = Program.taskManager.taskInstances;

                if (this.taskInstances.Count != taskInstances.Count)
                {
                    this.taskInstances.Clear();
                    this.taskInstances.AddRange(taskInstances);
                }

                await Utils.WaitShortAsync();
                await this.RenderAsync();
            }
        });
    }

}