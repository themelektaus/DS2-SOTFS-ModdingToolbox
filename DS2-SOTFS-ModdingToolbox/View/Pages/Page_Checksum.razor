<div flex-vertical>
    <div>
        <p>
            First, the checksum of the currently installed game is calculated and<br />
            compared accordingly to see if it matches the original game data.
        </p>
    </div>
    <div flex-horizontal>
        <Button onClick="onNextClick" enabled="checksumMatched">
            Continue
        </Button>
    </div>
</div>

@code {

    [CascadingParameter] public App app { get; set; }

    [Parameter] public Func<Task> onNextClick { get; set; }

    bool calculatingChecksum;
    bool checksumMatched;

    protected override async Task OnInitializedAsync()
    {
        await CalcChecksumAsync();
    }

    async Task CalcChecksumAsync()
    {
        calculatingChecksum = true;
        app.Render();

        var gameFinder = GameFinderUtils.Create(app.config);
        if (gameFinder is null)
            goto Exit;

        var gameFolder = FolderExists(gameFinder.gameFolder_Origin) ? gameFinder.gameFolder_Origin : gameFinder.gameFolder;
        var task = new ManagedTask_CalcFolderChecksum(gameFolder);

        task.onDone.AddListener(fileChecksums =>
        {
            var orignalFileChecksumsJson = ReadText(Data.originalChecksumFile);
            var orignalFileChecksums = JsonConvert.DeserializeObject<HashSet<FileChecksum>>(orignalFileChecksumsJson);
            checksumMatched = orignalFileChecksums.SequenceEqual(fileChecksums);
            return $"Processed {fileChecksums.Count} files";
        });

        await Program.taskManager.RunAsync(task);

    Exit:
        calculatingChecksum = false;
        app.Render();
    }

}