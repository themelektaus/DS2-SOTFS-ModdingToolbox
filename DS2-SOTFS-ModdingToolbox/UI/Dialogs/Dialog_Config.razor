<Dialog @ref="dialog">
    <Header>@CONFIG</Header>
    <Body>
        <div class="fieldset">
            <label class="center">@UI_SCALE</label>
            <div class="flex-horizontal gap-0 config-ui-scaling">
                <Button onClick="() => ChangeUIScale(1)"
                        styleClass="BSC.Create(BSC.Size.Small)"
                        enabled="app.config.uiScale != 1">
                    100%
                </Button>
                <Button onClick="() => ChangeUIScale(1.5f)"
                        styleClass="BSC.Create(BSC.Size.Small)"
                        enabled="app.config.uiScale != 1.5f">
                    150%
                </Button>
                <Button onClick="() => ChangeUIScale(2)"
                        styleClass="BSC.Create(BSC.Size.Small)"
                        enabled="app.config.uiScale != 2">
                    200%
                </Button>
            </div>
        </div>
        <div class="fieldset">
            <label class="center">@THEME</label>
            <div class="flex-horizontal" style="align-items: center; ">
                <Button onClick="ChangeTheme_Click"
                        styleClass="BSC.Create(BSC.Size.Small)">
                    @CHANGE
                </Button>
                <div class="fieldset" style="margin-bottom: .25rem; ">
                    <CheckBox checkedValue="app.config.useHardwareCursor"
                              checkedValueChanged="UseHardwareCursor_Click"
                              enabled="!Utils.IsEmpty(app.config.themeName)" />
                    <span>@HARDWARE_CURSOR</span>
                </div>
            </div>
        </div>
        <div class="fieldset">
            <label class="center">@LANGUAGE</label>
            <div class="flex-horizontal">
                <Button onClick="ChangeLanguage_Click"
                        styleClass="BSC.Create(BSC.Size.Small)">
                    @CHANGE
                </Button>
            </div>
        </div>
        <div class="fieldset">
            <label>@UXM_SELECTIVE_UNPACK</label>
            <input @bind="app.config.uxmSelectiveUnpackExe" @bind:event="oninput" />
        </div>
        <div class="fieldset">
            <label>@DS_MAP_STUDIO</label>
            <input @bind="app.config.dsMapStudioExe" @bind:event="oninput" />
        </div>
        <div class="fieldset">
            <label>@YABBER</label>
            <input @bind="app.config.yabberExe" @bind:event="oninput" />
        </div>
        <div class="fieldset">
            <label>@YABBER_DCX</label>
            <input @bind="app.config.yabberDcxExe" @bind:event="oninput" />
        </div>
    </Body>
    <Footer>
        <Button onClick="OnSubmit"
                styleClass="@BSC.Create(BSC.Size.Small, BSC.Appearance.Primary)">
            @SAVE
        </Button>
        <Button onClick="OnCancel"
                styleClass="@BSC.Create(BSC.Size.Small)">
            @CANCEL
        </Button>
    </Footer>
</Dialog>

@code {

    [CascadingParameter] public App app { get; set; }

    Dialog dialog;

    float uiScale;
    string themeName;
    bool useHardwareCursor;

    string languageName;

    public void Show()
    {
        uiScale = app.config.uiScale;
        themeName = app.config.themeName;
        languageName = app.config.languageName;
        useHardwareCursor = app.config.useHardwareCursor;

        dialog.visible = true;
    }

    void OnSubmit()
    {
        app.config.Save();

        dialog.visible = false;
    }

    void OnCancel()
    {
        if (
            app.config.uiScale != uiScale ||
            app.config.themeName != themeName ||
            app.config.useHardwareCursor != useHardwareCursor
        )
        {
            app.config.uiScale = uiScale;
            app.config.themeName = themeName;
            app.config.useHardwareCursor = useHardwareCursor;
            app.UpdateUI();
        }

        if (app.config.languageName != languageName)
            ChangeLanguage(languageName);

        dialog.visible = false;
    }

    void ChangeUIScale(float uiScale)
    {
        app.config.uiScale = uiScale;
        app.UpdateUI();
    }

    void ChangeTheme(string name)
    {
        app.config.themeName = name;
        app.UpdateUI();
    }

    void ChangeTheme_Click()
    {
        app.subSelectorDialog.Show(new()
        {
            title = CHANGE_THEME,
            submitButtonText = APPLY,
            onShow = FileUtils.GetThemeFiles,
            getSelected = x => x.FirstOrDefault(x => x.name == app.config.themeName),
            onSubmit = item =>
            {
                ChangeTheme(item.name);
                app.Render();
            }
        });
    }

    void UseHardwareCursor_Click(bool useHardwareCursor)
    {
        app.config.useHardwareCursor = useHardwareCursor;
        app.UpdateUI();
    }

    void ChangeLanguage(string name)
    {
        Utils.ChangeLanguage(app.config, name);
    }

    void ChangeLanguage_Click()
    {
        app.subSelectorDialog.Show(new()
        {
            title = CHANGE_LANGUAGE,
            submitButtonText = APPLY,
            onShow = FileUtils.GetLanguageFiles,
            getSelected = x => x.FirstOrDefault(x => x.name == app.config.languageName),
            onSubmit = item =>
            {
                try
                {
                    ChangeLanguage(item.name);
                }
                catch (Exception ex)
                {
                    Message.CreateError(ex.Message).Show();
                }
                app.Render();
            }
        });
    }

}